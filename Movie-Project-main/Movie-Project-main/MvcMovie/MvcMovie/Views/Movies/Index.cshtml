@model PaginatedList<MvcMovie.Models.Movie>


@{ ViewData["Title"] = "Movies"; }


@using PagedList.Mvc;

<style>
    .table {
        width: 100%;
        font-size: 20px;
        text-align: center;
    }

    .create-movie {
        padding: 5px 16px;
        border-radius: 25px;
        background-color: #ffc91c;
        color: #000;
    }

    p {
        margin: 18px 0;
    }

    .button {
        color: orange;
    }

    .table-top {
        border-top-color: #fff;
        font-size: 20px;
    }

    .table td, .table th {
        vertical-align: middle !important;
        text-align: left !important;
    }

    .movies-page {
        color: #ff9f00;
    }
</style>

<h1 class="movies-page">Movies</h1>

<p>
    <a class="create-movie" asp-action="Create">Add a movie</a>
</p>
<table class="table">
    <thead>
        <tr class="table-top">
            <th>
                Title
            </th>
            <th>
                ReleaseDate
            </th>
            <th>
                Genre
            </th>
            <th>
                Price
            </th>
            <th>
                DirectedBy
            </th>
            <th>
                DistributedBy
            </th>
            <th>
                RunningTime
            </th>
            <th>
                Language
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.Title)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.ReleaseDate)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Genre)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Price)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.DirectedBy)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.DistributedBy)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.RunningTime)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Language)
    </td>
    <td>
        <a class="button" asp-action="Edit" asp-route-id="@item.Id">Edit</a> <br />
        <a class="button" asp-action="Details" asp-route-id="@item.Id">Details</a> <br />
        <a class="button" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
    </td>
</tr>}
    </tbody>
</table>

@{ var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : ""; }



<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>

